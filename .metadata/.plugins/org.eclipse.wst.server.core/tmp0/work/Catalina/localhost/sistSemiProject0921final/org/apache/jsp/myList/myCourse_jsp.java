/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-09-21 01:45:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.myList;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import data.dao.MyCourseDao;
import data.dto.MyCourseDto;
import java.util.List;

public final class myCourse_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("data.dto.MyCourseDto");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("data.dao.MyCourseDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.0.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css\">\r\n");
      out.write("<title>나만의 코스</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("/*왼쪽 마이페이지 메뉴바*/\r\n");
      out.write("div.menu {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	border: 0px solid gray;\r\n");
      out.write("	width: 200px;\r\n");
      out.write("	height: 850px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("i {\r\n");
      out.write("	font-size: 30px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/*info1 ~ info3 는 가운데 들어갈 마이페이지의 정보를 의미함*/\r\n");
      out.write("div.center1 {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	margin-top: 0px;\r\n");
      out.write("	margin-left: 350px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div.foot {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	top: 5px;\r\n");
      out.write("	left: 1000px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".sidebar {\r\n");
      out.write("	height: 800px;\r\n");
      out.write("	width: 220px;\r\n");
      out.write("	position: fixed;\r\n");
      out.write("	top: 100px;\r\n");
      out.write("	left: -250px; /* 초기에는 화면 밖에 위치 */\r\n");
      out.write("	background-color: wheat;\r\n");
      out.write("	transition: left 0.3s ease;\r\n");
      out.write("	z-index: 999; /* 이 부분을 추가해서 sidebar가 다른 요소 위에 나타나도록 설정 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 사이드바 링크 스타일 (마우스 호버 시) */\r\n");
      out.write(".sidebar a:hover {\r\n");
      out.write("	background-color: #555;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 내용 부분 스타일 */\r\n");
      out.write(".content {\r\n");
      out.write("	margin-left: 0; /* 사이드바가 열릴 때 내용 부분을 옮기기 위한 여백 */\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 사이드바 열릴 때 애니메이션 */\r\n");
      out.write(".sidebar.open {\r\n");
      out.write("	left: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("	margin-left:500px;\r\n");
      out.write("	margin-top:220px;\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write("div.a {\r\n");
      out.write("	display:flex;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@import url(//fonts.googleapis.com/earlyaccess/jejugothic.css);\r\n");
      out.write("body * { \r\n");
      out.write(" font-family: 'Jeju Gothic', sans-serif;\r\n");
      out.write(" background-color: \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bi.bi-box-arrow-in-right {\r\n");
      out.write("  background-color: wheat; /* 배경색을 투명하게 설정합니다. */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("bi bi-menu-app {\r\n");
      out.write("	background-color : white;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");

String root = request.getContextPath();

String myid = (String)session.getAttribute("myid");


MyCourseDao dao = new MyCourseDao();
List<String> nameList = dao.selectName(myid); 

      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("		<div class=\"menu\">\r\n");
      out.write("			<hr>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<button onclick=\"toggleSidebar()\">\r\n");
      out.write("				<i class=\"bi bi-menu-app\" style=\"font-size: 20px; border: none;\"></i>\r\n");
      out.write("			</button>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br> <a\r\n");
      out.write("				href=\"https://map.naver.com/p/entry/place/1917723384?lng=126.899169&lat=33.4915799&placePath=%2Fhome&entry=plt&c=15.00,0,0,0,dh\">\r\n");
      out.write("				<img alt=\"광고1.gif\" src=\"");
      out.print(root);
      out.write("/jeju/jongdal.gif\"\r\n");
      out.write("				style=\"width: 200px; height: 240px;\">\r\n");
      out.write("			</a><br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br> <a\r\n");
      out.write("				href=\"https://map.naver.com/p/search/%EC%A0%9C%EC%A3%BC%EC%98%A4%EC%84%B1/place/37797002?placePath=?entry=pll&from=nx&fromNxList=true&c=15.00,0,0,0,dh\">\r\n");
      out.write("				<img alt=\"광고2.gif\" src=\"");
      out.print(root);
      out.write("/jeju/momo.gif\"\r\n");
      out.write("				style=\"width: 200px;\">\r\n");
      out.write("			</a><br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br> <a\r\n");
      out.write("				href=\"https://map.naver.com/p/entry/place/1397321112?lng=126.90498876843613&lat=33.39882693494372&placePath=%2Fhome&entry=plt&c=15.00,0,0,0,dh\">\r\n");
      out.write("				<img alt=\"광고3.gif\" src=\"");
      out.print(root);
      out.write("/jeju/onpyeong.gif\"\r\n");
      out.write("				style=\"width: 200px;\">\r\n");
      out.write("			</a><br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br> <a\r\n");
      out.write("				href=\"https://map.naver.com/p/entry/place/1035148658?lng=126.3012787&lat=33.2904473&placePath=%2Fhome&entry=plt&c=15.00,0,0,0,dh\">\r\n");
      out.write("				<img alt=\"광고4.gif\" src=\"");
      out.print(root);
      out.write("/jeju/osung.gif\"\r\n");
      out.write("				style=\"width: 200px;\">\r\n");
      out.write("			</a><br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<!-- 사이드바 -->\r\n");
      out.write("		<div class=\"sidebar\">\r\n");
      out.write("			<button type=\"button\"\r\n");
      out.write("				style=\"margin-left: 15px; margin-top: 20px; border: none;\"\r\n");
      out.write("				onclick=\"toggleSidebar()\">\r\n");
      out.write("				<i class=\"bi bi-box-arrow-in-right\" style=\"font-size:24px;\"></i>\r\n");
      out.write("			</button>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br> &nbsp;&nbsp;<a href=\"index.jsp\">&nbsp;<i\r\n");
      out.write("				class=\"bi bi-house-door\"></i>&nbsp;&nbsp;&nbsp;&nbsp;<b>홈</b></a><br>\r\n");
      out.write("			<br> &nbsp;&nbsp;<a href=\"#\">&nbsp;<i\r\n");
      out.write("				class=\"bi bi-person-lines-fill\"></i>&nbsp;&nbsp;&nbsp;&nbsp;<b>개인정보</b></a><br>\r\n");
      out.write("			<br> &nbsp;&nbsp;<a href=\"index.jsp?main=myPage/secure.jsp\">&nbsp;<i\r\n");
      out.write("				class=\"bi bi-shield-shaded\"></i>&nbsp;&nbsp;&nbsp;&nbsp;<b>보안</b></a><br>\r\n");
      out.write("			<br> &nbsp;&nbsp;<a href=\"index.jsp?main=admin/adminBoard.jsp\">&nbsp;<i\r\n");
      out.write("				class=\"bi bi-telephone-outbound-fill\"></i>&nbsp;&nbsp;&nbsp;<b>고객센터</b></a>\r\n");
      out.write("			<!-- 로그인상태면 로그아웃 , 로그아웃 상태면 로그인으로 보이게하기 0905 적어둠 -->\r\n");
      out.write("			<br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br>\r\n");
      out.write("			<br> &nbsp;&nbsp;<a href=\"index.jsp?main=login/logoutAction.jsp\">&nbsp;<i\r\n");
      out.write("				class=\"bi bi-door-closed-fill\"></i>&nbsp;&nbsp;&nbsp;로그아웃\r\n");
      out.write("			</a><br>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("<h2><b>나만의코스 리스트</b></h2><br>\r\n");
      out.write("	<div class=\"a\">\r\n");
      out.write("	");
 for(int i=0;i<nameList.size();i++) { 
		String name=nameList.get(i);
		List<MyCourseDto>list=dao.myCourseList(myid, name);
		
      out.write("\r\n");
      out.write("		<table class=\"table table-bordered\" style=\"width:450px; height:350px;\">\r\n");
      out.write("		");

		for(int j=0;j<list.size();j++){
			MyCourseDto dto=list.get(j);
		
      out.write("\r\n");
      out.write("			<tr>\r\n");
      out.write("			<td style=\"text-align:center;\"><b class=\"name\" style=\"font-size:20px; cursor:pointer;\" \r\n");
      out.write("			onclick=\"location.href='index.jsp?main=myList/detailCourse.jsp?id=");
      out.print(myid );
      out.write("&name=");
      out.print(name);
      out.write("'\">나만의코스 이름 : ");
      out.print(name );
      out.write("</b></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td style=\"text-align:center;\"><img src =\"");
      out.print(root );
      out.write("/jeju/");
      out.print(dto.getMainPhoto() );
      out.write("\" style=\"width:400px; height:300px;\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		");

		break;
		}
		
      out.write("\r\n");
      out.write("		</table>\r\n");
      out.write("		");

	}
	
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("		// 사이드바 열기/닫기 함수\r\n");
      out.write("		function toggleSidebar() {\r\n");
      out.write("			var sidebar = document.querySelector('.sidebar');\r\n");
      out.write("			sidebar.classList.toggle('open');\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		//detailCourse\r\n");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
