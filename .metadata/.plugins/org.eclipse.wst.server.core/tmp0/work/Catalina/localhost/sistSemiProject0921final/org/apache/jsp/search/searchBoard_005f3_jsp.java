/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-09-21 02:39:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.search;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import data.dao.SearchDao;
import java.util.HashMap;
import java.util.ArrayList;
import data.dto.SearchResult;
import java.util.List;
import data.dao.SearchDao_v3;

public final class searchBoard_005f3_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


   public String translation(String table) {
      String tableName="";
      
      if(table.equals("TourSpot")){tableName="관광지";}
      else if(table.equals("MyCourse")){tableName="나만의코스";}
      else if(table.equals("RecomCourse")){tableName="추천코스";}
      else if(table.equals("TourReview")){tableName="리뷰";}
      else{tableName="비회원리뷰";}
      
      return tableName;
   }
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("data.dao.SearchDao");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("data.dao.SearchDao_v3");
    _jspx_imports_classes.add("data.dto.SearchResult");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Dongle:wght@300&family=Nanum+Pen+Script&family=Noto+Serif+KR:wght@200&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("<!-- <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\"> -->\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.0.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("   ul.left-tab{\r\n");
      out.write("      float: left;\r\n");
      out.write("   }\r\n");
      out.write("   ul.right-tab{\r\n");
      out.write("      float: right;\r\n");
      out.write("   }\r\n");
      out.write("   div.tab-pane{\r\n");
      out.write("      position: absolute;\r\n");
      out.write("      top: 130px;\r\n");
      out.write("      left: 40px;\r\n");
      out.write("   }\r\n");
      out.write("   @import url(//fonts.googleapis.com/earlyaccess/jejugothic.css);\r\n");
      out.write("\r\n");
      out.write("   body * { \r\n");
      out.write("      font-family: 'Jeju Gothic', sans-serif;\r\n");
      out.write("   }\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("   $(function(){\r\n");
      out.write("      $(\"button.v\").click(function(){\r\n");
      out.write("         $(\"div.v_align\").show();\r\n");
      out.write("         $(\"div.grid_align\").hide();\r\n");
      out.write("      });\r\n");
      out.write("      $(\"button.h\").click(function(){\r\n");
      out.write("         $(\"div.grid_align\").show();\r\n");
      out.write("         $(\"div.v_align\").hide();\r\n");
      out.write("      });\r\n");
      out.write("      \r\n");
      out.write("      $(\"div.grid_align\").hide();\r\n");
      out.write("   });\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("   ");
      out.write("\r\n");
      out.write("   ");

   String root = request.getContextPath();
   request.setCharacterEncoding("utf-8");
   String sortidx=(request.getParameter("sortidx")==null||request.getParameter("sortidx").equals("null")?"":request.getParameter("sortidx"));
   List<String> tables=new ArrayList<String>();
   
   if(sortidx.equals("0")||sortidx.equals(""))
   {tables.add("TourSpot");tables.add("MyCourse");tables.add("RecomCourse");tables.add("TourReview");tables.add("GuestReview");}
   else if(sortidx.equals("1")){tables.add("TourSpot");}
   else if(sortidx.equals("2")){tables.add("MyCourse");}
   else if(sortidx.equals("3")){tables.add("RecomCourse");}
   else if(sortidx.equals("4")){tables.add("TourReview");}
   else if(sortidx.equals("5")){tables.add("GuestReview");}

   String inputWords=(request.getParameter("inputWords")==null||request.getParameter("inputWords").equals("null")?"":request.getParameter("inputWords"));
   
   SearchDao_v3 searchDao=new SearchDao_v3();
   
   int totalCount=searchDao.getTotalCount(inputWords,tables);
   int totalPage;
   int startPage;
   int endPage;
   int startNum;
   int perPage=3;
   int perBlock=5;
   int currentPage;
   
   if(request.getParameter("currentPage")==null||request.getParameter("currentPage").equals("null")) {currentPage=1;}
   else {currentPage=Integer.parseInt(request.getParameter("currentPage"));}

   totalPage=totalCount/perPage+(totalCount%perPage==0?0:1);

   startPage=(currentPage-1)/perBlock*perBlock+1;
        
   endPage=startPage+perBlock-1;

   if(endPage>totalPage)
      endPage=totalPage;

   startNum=(currentPage-1)*perPage;
   System.out.println("키워드:"+inputWords+",sidx:"+sortidx+"cp:"+currentPage);
   
      out.write("\r\n");
      out.write("   <div>\r\n");
      out.write("      <div style=\"margin: 0px 50px 0px 50px\"><br>\r\n");
      out.write("         <nav class=\"navbar navbar-expand-sm bg-light navbar-light\">\r\n");
      out.write("            <div class=\"container-fluid\">\r\n");
      out.write("               <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n");
      out.write("                  <ul class=\"navbar-nav\">\r\n");
      out.write("                     <li class=\"nav-item\">\r\n");
      out.write("                        <a class=\"nav-link\" href=\"index.jsp?main=search/searchIndex.jsp?sortidx=0&currentPage=");
      out.print(currentPage);
      out.write("&inputWords=");
      out.print(inputWords);
      out.write("\">전체</a>\r\n");
      out.write("                     </li>\r\n");
      out.write("                     <li class=\"nav-item\">\r\n");
      out.write("                        <a class=\"nav-link\" href=\"index.jsp?main=search/searchIndex.jsp?sortidx=1&currentPage=");
      out.print(currentPage);
      out.write("&inputWords=");
      out.print(inputWords);
      out.write("\">관광지</a>\r\n");
      out.write("                     </li>\r\n");
      out.write("                     <li class=\"nav-item\">\r\n");
      out.write("                        <a class=\"nav-link\" href=\"index.jsp?main=search/searchIndex.jsp?sortidx=2&currentPage=");
      out.print(currentPage);
      out.write("&inputWords=");
      out.print(inputWords);
      out.write("\">나만의코스</a>\r\n");
      out.write("                     </li>\r\n");
      out.write("                     <li class=\"nav-item\">\r\n");
      out.write("                        <a class=\"nav-link \" href=\"index.jsp?main=search/searchIndex.jsp?sortidx=3&currentPage=");
      out.print(currentPage);
      out.write("&inputWords=");
      out.print(inputWords);
      out.write("\">추천코스</a>\r\n");
      out.write("                     </li>\r\n");
      out.write("                     <li class=\"nav-item\">\r\n");
      out.write("                        <a class=\"nav-link\" href=\"index.jsp?main=search/searchIndex.jsp?sortidx=4&currentPage=");
      out.print(currentPage);
      out.write("&inputWords=");
      out.print(inputWords);
      out.write("\">리뷰</a>\r\n");
      out.write("                     </li>\r\n");
      out.write("                     <li class=\"nav-item\">\r\n");
      out.write("                        <a class=\"nav-link\" href=\"index.jsp?main=search/searchIndex.jsp?sortidx=5&currentPage=");
      out.print(currentPage);
      out.write("&inputWords=");
      out.print(inputWords);
      out.write("\">비회원리뷰</a>\r\n");
      out.write("                     </li>\r\n");
      out.write("                  </ul>\r\n");
      out.write("               </div>\r\n");
      out.write("            </div>\r\n");
      out.write("         </nav>\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("      <div class=\"container mt-3\">\r\n");
      out.write("         <!-- Nav tabs -->\r\n");
      out.write("         <ul class=\"nav nav-tabs left-tab\" style=\"margin-left: 33px\">\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("               <button type=\"button\" class=\"btn btn-outline-info btn-sm v\"><i class=\"bi bi-justify\"></i></button>\r\n");
      out.write("            </li>&nbsp;\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("               <button type=\"button\" class=\"btn btn-outline-info btn-sm h\"><i class=\"bi bi-border-all\"></i></button>\r\n");
      out.write("            </li>\r\n");
      out.write("         </ul>\r\n");
      out.write("         <ul class=\"nav nav-tabs right-tab\">\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("               <a class=\"nav-link active sortBtn1\" data-bs-toggle=\"tab\" href=\"#tabs1\" style=\"color: black\">관련도순</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("               <a class=\"nav-link sortBtn2\" data-bs-toggle=\"tab\" href=\"#tabs2\" style=\"color: black\">최신순</a>\r\n");
      out.write("            </li>\r\n");
      out.write("            <li class=\"nav-item\">\r\n");
      out.write("               <a class=\"nav-link sortBtn3\" data-bs-toggle=\"tab\" href=\"#tabs3\" style=\"color: black\">인기순</a>\r\n");
      out.write("            </li>\r\n");
      out.write("         </ul>\r\n");
      out.write("      </div>\r\n");
      out.write("   </div>\r\n");
      out.write("   <div class=\"tab-content\">\r\n");
      out.write("      <div id=\"tabs1\" class=\"container tab-pane fade row\"><br>\r\n");
      out.write("      <span>\"");
      out.print(inputWords );
      out.write("\"에 대한 총 ");
      out.print(totalCount );
      out.write("개의 검색결과가 있습니다</span>\r\n");
      out.write("         ");
List<HashMap<String, List<HashMap<String, String>>>> list_relevance=searchDao.searchInputWordsInWholeTablesWithStatistics(inputWords, tables, startNum, perPage, 1);
         for(int i=0;i<list_relevance.size();i++)
         {
            HashMap<String, List<HashMap<String, String>>> tableMap=list_relevance.get(i);
            
            for(String table:tables)
            {
               String columns=searchDao.searchColumnNamesInEachTables(table);
               String [] columnsArr=columns.split(",");
               
               if(tableMap.get(table)==null){continue;}
               else
               {
                  List<HashMap<String, String>> mapList=tableMap.get(table);
                  
                  for(HashMap<String, String> map:mapList)
                  {
                  
      out.write("\r\n");
      out.write("                  <div class=\"v_align\">\r\n");
      out.write("                  <table class=\"tb1\">\r\n");
      out.write("                     <caption align=\"top\" style=\"font-size: 1.2em\">");
      out.print(translation(table) );
      out.write("</caption>\r\n");
      out.write("                     <tr style=\"text-align: center;\">\r\n");
      out.write("                        <th>사진</th><th>정보</th>\r\n");
      out.write("                     </tr>\r\n");
      out.write("                     ");
String photo="";
                     for(String column:columnsArr){
                        if(column.equals("photo")){photo=(map.get("photo")==null?"":map.get("photo"));}
                        else if(column.equals("mainphoto")){photo=(map.get("mainphoto")==null?"":map.get("mainphoto"));}
                     }
                     int j=0;
                     for(String column:columnsArr)
                     {
      out.write("\r\n");
      out.write("                        <tr>\r\n");
      out.write("                           ");
if(j==0&&!photo.equals("")){
      out.write("\r\n");
      out.write("                              <td rowspan=\"");
      out.print(columnsArr.length);
      out.write("\"><img src=\"");
      out.print(root);
      out.write("/jeju/");
      out.print(photo);
      out.write("\" style=\"width: 300px; height: 300px; border-radius: 10px 10px 10px 10px;\"></td>\r\n");
      out.write("                           ");
}else if(j==0&&photo.equals("")){
      out.write("\r\n");
      out.write("                              <td rowspan=\"");
      out.print(columnsArr.length);
      out.write("\"><img src=\"");
      out.print(root);
      out.write("/jeju/maininfo.png\" style=\"width: 300px; height: 300px; border-radius: 10px 10px 10px 10px;\"></td>\r\n");
      out.write("                           ");
}
                           if(!column.equals("photo")&&!column.equals("mainphoto")){
      out.write("\r\n");
      out.write("                           <td>");
      out.print(map.get(column) );
      out.write("</td>");
} 
      out.write("\r\n");
      out.write("                        </tr>\r\n");
      out.write("                     ");
j++;}
      out.write("\r\n");
      out.write("               </table>\r\n");
      out.write("               </div>\r\n");
      out.write("               <div class=\"grid_align col-md-6\" style=\"float: left\">\r\n");
      out.write("                  <table class=\"tb2\">\r\n");
      out.write("                     <caption align=\"top\" style=\"font-size: 1.2em\">");
      out.print(translation(table) );
      out.write("</caption>\r\n");
      out.write("                     <tr>\r\n");
      out.write("                        ");
if(!photo.equals("")){
      out.write("\r\n");
      out.write("                              <td rowspan=\"");
      out.print(columnsArr.length);
      out.write("\"><img src=\"");
      out.print(root);
      out.write("/jeju/");
      out.print(photo);
      out.write("\" style=\"width: 300px; height: 300px; border-radius: 10px 10px 10px 10px;\"></td>\r\n");
      out.write("                           ");
}else if(photo.equals("")){
      out.write("\r\n");
      out.write("                              <td rowspan=\"");
      out.print(columnsArr.length);
      out.write("\"><img src=\"");
      out.print(root);
      out.write("/jeju/maininfo.png\" style=\"width: 300px; height: 300px; border-radius: 10px 10px 10px 10px;\"></td>\r\n");
      out.write("                           ");
}
      out.write("\r\n");
      out.write("                     </tr>\r\n");
      out.write("                     ");
for(String column:columnsArr)
                     {
                        if(!column.equals("photo")&&!column.equals("mainphoto")){
      out.write("\r\n");
      out.write("                        <tr>\r\n");
      out.write("                           <td>");
      out.print(map.get(column) );
      out.write("</td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                     ");
}}
      out.write("\r\n");
      out.write("                  </table>\r\n");
      out.write("               </div>\r\n");
      out.write("               ");
}
               }
            }
         }
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("      <div id=\"tabs2\" class=\"container tab-pane fade\"><br>\r\n");
      out.write("      <span>\"");
      out.print(inputWords );
      out.write("\"에 대한 총 ");
      out.print(totalCount );
      out.write("개의 검색결과가 있습니다</span>\r\n");
      out.write("         ");
List<HashMap<String, List<HashMap<String, String>>>> list_latest=searchDao.searchInputWordsInWholeTablesWithStatistics(inputWords, tables, startNum, perPage, 2);
         for(int i=0;i<list_latest.size();i++)
         {
            HashMap<String, List<HashMap<String, String>>> tableMap=list_latest.get(i);
            
            for(String table:tables)
            {
               String columns=searchDao.searchColumnNamesInEachTables(table);
               String [] columnsArr=columns.split(",");
               
               if(tableMap.get(table)==null){continue;}
               else
               {
                  List<HashMap<String, String>> mapList=tableMap.get(table);
                  
                  for(HashMap<String, String> map:mapList)
                  {
                  
      out.write("\r\n");
      out.write("                  <div class=\"v_align\">\r\n");
      out.write("                  <table class=\"tb3\">\r\n");
      out.write("                     <caption align=\"top\" style=\"font-size: 1.2em\">");
      out.print(translation(table) );
      out.write("</caption>\r\n");
      out.write("                     <tr style=\"text-align: center;\">\r\n");
      out.write("                        <th>사진</th><th>정보</th>\r\n");
      out.write("                     </tr>\r\n");
      out.write("                     ");
String photo="";
                     for(String column:columnsArr){
                        if(column.equals("photo")){photo=(map.get("photo")==null?"":map.get("photo"));}
                        else if(column.equals("mainphoto")){photo=(map.get("mainphoto")==null?"":map.get("mainphoto"));}
                     }
                     int j=0;
                     for(String column:columnsArr)
                     {
      out.write("\r\n");
      out.write("                        <tr>\r\n");
      out.write("                           ");
if(j==0&&!photo.equals("")){
      out.write("\r\n");
      out.write("                              <td rowspan=\"");
      out.print(columnsArr.length);
      out.write("\"><img src=\"");
      out.print(root);
      out.write("/jeju/");
      out.print(photo );
      out.write("\" style=\"width: 300px; height: 300px; border-radius: 10px 10px 10px 10px;\"></td>\r\n");
      out.write("                           ");
}else if(j==0&&photo.equals("")){
      out.write("\r\n");
      out.write("                              <td rowspan=\"");
      out.print(columnsArr.length);
      out.write("\"><img src=\"");
      out.print(root);
      out.write("/jeju/maininfo.png\" style=\"width: 300px; height: 300px; border-radius: 10px 10px 10px 10px;\"></td>\r\n");
      out.write("                           ");
}
                           if(!column.equals("photo")&&!column.equals("mainphoto")){
      out.write("\r\n");
      out.write("                           <td>");
      out.print(map.get(column) );
      out.write("</td>");
} 
      out.write("\r\n");
      out.write("                        </tr>\r\n");
      out.write("                     ");
j++;}
      out.write("\r\n");
      out.write("               </table>\r\n");
      out.write("               </div>\r\n");
      out.write("               <div class=\"grid_align col-md-6\" style=\"float: left\">\r\n");
      out.write("                  <table class=\"tb4\">\r\n");
      out.write("                     <caption align=\"top\" style=\"font-size: 1.2em\">");
      out.print(translation(table) );
      out.write("</caption>\r\n");
      out.write("                     <tr>\r\n");
      out.write("                        ");
if(!photo.equals("")){
      out.write("\r\n");
      out.write("                              <td rowspan=\"");
      out.print(columnsArr.length);
      out.write("\"><img src=\"");
      out.print(root);
      out.write("/jeju/");
      out.print(photo);
      out.write("\" style=\"width: 300px; height: 300px; border-radius: 10px 10px 10px 10px;\"></td>\r\n");
      out.write("                           ");
}else if(photo.equals("")){
      out.write("\r\n");
      out.write("                              <td rowspan=\"");
      out.print(columnsArr.length);
      out.write("\"><img src=\"");
      out.print(root);
      out.write("/jeju/maininfo.png\" style=\"width: 300px; height: 300px; border-radius: 10px 10px 10px 10px;\"></td>\r\n");
      out.write("                           ");
}
      out.write("\r\n");
      out.write("                     </tr>\r\n");
      out.write("                     ");
for(String column:columnsArr)
                     {
                        if(!column.equals("photo")&&!column.equals("mainphoto")){
      out.write("\r\n");
      out.write("                        <tr>\r\n");
      out.write("                           <td>");
      out.print(map.get(column) );
      out.write("</td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                     ");
}}
      out.write("\r\n");
      out.write("                  </table>\r\n");
      out.write("               </div>\r\n");
      out.write("               ");
}
               }
            }
         }
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("      <div id=\"tabs3\" class=\"container tab-pane fade\"><br>\r\n");
      out.write("      <span>\"");
      out.print(inputWords );
      out.write("\"에 대한 총 ");
      out.print(totalCount );
      out.write("개의 검색결과가 있습니다</span>\r\n");
      out.write("         ");
List<HashMap<String, List<HashMap<String, String>>>> list_popularity=searchDao.searchInputWordsInWholeTablesWithStatistics(inputWords, tables, startNum, perPage, 3);
         for(int i=0;i<list_popularity.size();i++)
         {
            HashMap<String, List<HashMap<String, String>>> tableMap=list_popularity.get(i);
            
            for(String table:tables)
            {
               String columns=searchDao.searchColumnNamesInEachTables(table);
               String [] columnsArr=columns.split(",");
               
               if(tableMap.get(table)==null){continue;}
               else
               {
                  List<HashMap<String, String>> mapList=tableMap.get(table);
                  
                  for(HashMap<String, String> map:mapList)
                  {
                  
      out.write("\r\n");
      out.write("                  <div class=\"v_align\">\r\n");
      out.write("                  <table class=\"tb5\">\r\n");
      out.write("                     <caption align=\"top\" style=\"font-size: 1.2em\">");
      out.print(translation(table) );
      out.write("</caption>\r\n");
      out.write("                     <tr style=\"text-align: center;\">\r\n");
      out.write("                        <th>사진</th><th>정보</th>\r\n");
      out.write("                     </tr>\r\n");
      out.write("                     ");
String photo="";
                     for(String column:columnsArr){
                        if(column.equals("photo")){photo=(map.get("photo")==null?"":map.get("photo"));}
                        else if(column.equals("mainphoto")){photo=(map.get("mainphoto")==null?"":map.get("mainphoto"));}
                     }
                     int j=0;
                     for(String column:columnsArr)
                     {
      out.write("\r\n");
      out.write("                        <tr>\r\n");
      out.write("                           ");
if(j==0&&!photo.equals("")){
      out.write("\r\n");
      out.write("                              <td rowspan=\"");
      out.print(columnsArr.length);
      out.write("\"><img src=\"");
      out.print(root);
      out.write("/jeju/");
      out.print(photo );
      out.write("\" style=\"width: 300px; height: 300px; border-radius: 10px 10px 10px 10px;\"></td>\r\n");
      out.write("                           ");
}else if(j==0&&photo.equals("")){
      out.write("\r\n");
      out.write("                              <td rowspan=\"");
      out.print(columnsArr.length);
      out.write("\"><img src=\"");
      out.print(root);
      out.write("/jeju/maininfo.png\" style=\"width: 300px; height: 300px; border-radius: 10px 10px 10px 10px;\"></td>\r\n");
      out.write("                           ");
}
                           if(!column.equals("photo")&&!column.equals("mainphoto")){
      out.write("\r\n");
      out.write("                           <td>");
      out.print(map.get(column) );
      out.write("</td>");
} 
      out.write("\r\n");
      out.write("                        </tr>\r\n");
      out.write("                     ");
j++;}
      out.write("\r\n");
      out.write("               </table>\r\n");
      out.write("               </div>\r\n");
      out.write("               <div class=\"grid_align col-md-6\" style=\"float: left\">\r\n");
      out.write("                  <table class=\"tb6\">\r\n");
      out.write("                     <caption align=\"top\" style=\"font-size: 1.2em\">");
      out.print(translation(table) );
      out.write("</caption>\r\n");
      out.write("                     <tr>\r\n");
      out.write("                        ");
if(!photo.equals("")){
      out.write("\r\n");
      out.write("                              <td rowspan=\"");
      out.print(columnsArr.length);
      out.write("\"><img src=\"");
      out.print(root);
      out.write("/jeju/");
      out.print(photo);
      out.write("\" style=\"width: 300px; height: 300px; border-radius: 10px 10px 10px 10px;\"></td>\r\n");
      out.write("                           ");
}else if(photo.equals("")){
      out.write("\r\n");
      out.write("                              <td rowspan=\"");
      out.print(columnsArr.length);
      out.write("\"><img src=\"");
      out.print(root);
      out.write("/jeju/maininfo.png\" style=\"width: 300px; height: 300px; border-radius: 10px 10px 10px 10px;\"></td>\r\n");
      out.write("                           ");
}
      out.write("\r\n");
      out.write("                     </tr>\r\n");
      out.write("                     ");
for(String column:columnsArr)
                     {
                        if(!column.equals("photo")&&!column.equals("mainphoto")){
      out.write("\r\n");
      out.write("                        <tr>\r\n");
      out.write("                           <td>");
      out.print(map.get(column) );
      out.write("</td>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                     ");
}}
      out.write("\r\n");
      out.write("                  </table>\r\n");
      out.write("               </div>\r\n");
      out.write("               ");
}
               }
            }
         }
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("      <div style=\"width: 600px;text-align: center\" class=\"container mt-3\">\r\n");
      out.write("         <ul class=\"pagination justify-content-center\">\r\n");
      out.write("            ");

            if(startPage>1)
            {
      out.write("\r\n");
      out.write("               <li class=\"page-item\">\r\n");
      out.write("                  <a href=\"index.jsp?main=search/searchIndex.jsp?currentPage=");
      out.print(startPage-1);
      out.write("&sortidx=");
      out.print(sortidx );
      out.write("&inputWords=");
      out.print(inputWords );
      out.write("\" class=\"page-link\">이전</a>\r\n");
      out.write("               </li>\r\n");
      out.write("            ");
}         
            for(int pp=startPage;pp<=endPage;pp++)
            {
               if(pp==currentPage)
               {
      out.write("\r\n");
      out.write("                  <li class=\"page-item active\">\r\n");
      out.write("                     <a href=\"index.jsp?main=search/searchIndex.jsp?currentPage=");
      out.print(pp);
      out.write("&sortidx=");
      out.print(sortidx );
      out.write("&inputWords=");
      out.print(inputWords );
      out.write("\" class=\"page-link\">");
      out.print(pp );
      out.write("</a>\r\n");
      out.write("                  </li>\r\n");
      out.write("               ");
}else
               {
      out.write("\r\n");
      out.write("                  <li class=\"page-item\">\r\n");
      out.write("                     <a href=\"index.jsp?main=search/searchIndex.jsp?currentPage=");
      out.print(pp);
      out.write("&sortidx=");
      out.print(sortidx );
      out.write("&inputWords=");
      out.print(inputWords );
      out.write("\" class=\"page-link\">");
      out.print(pp );
      out.write("</a>\r\n");
      out.write("                  </li>\r\n");
      out.write("               ");
}
            }
            if(endPage<totalPage)
            {
      out.write("\r\n");
      out.write("               <li class=\"page-item\">\r\n");
      out.write("                  <a href=\"index.jsp?main=search/searchIndex.jsp?currentPage=");
      out.print(endPage+1);
      out.write("&sortidx=");
      out.print(sortidx );
      out.write("&inputWords=");
      out.print(inputWords );
      out.write("\" class=\"page-link\">다음</a>\r\n");
      out.write("               </li>\r\n");
      out.write("            ");
}   
            
      out.write("\r\n");
      out.write("         </ul>\r\n");
      out.write("      </div>\r\n");
      out.write("   </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
