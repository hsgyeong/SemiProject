/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-09-21 02:13:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.myCourse;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import data.dao.TempSaveDao;
import data.dto.MemberDto;
import data.dao.MemberDao;
import data.dto.TempSaveDto;
import java.util.List;
import data.dao.TourSpotDao;
import com.google.gson.Gson;

public final class selectTable_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("data.dao.TempSaveDao");
    _jspx_imports_classes.add("data.dao.MemberDao");
    _jspx_imports_classes.add("data.dto.TempSaveDto");
    _jspx_imports_classes.add("com.google.gson.Gson");
    _jspx_imports_classes.add("data.dto.MemberDto");
    _jspx_imports_classes.add("data.dao.TourSpotDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Dongle&family=Gaegu:wght@700&family=Nanum+Pen+Script&family=Single+Day&display=swap\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.0.js\"></script>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("#addCaption{\r\n");
      out.write("margin: 0 0 20px;\r\n");
      out.write("    font-weight: 800;\r\n");
      out.write("    font-size: 22px;\r\n");
      out.write("    color:black;\r\n");
      out.write("    display:inline-block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#selDay{\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	margin-left:50px;\r\n");
      out.write("	width:120px;\r\n");
      out.write("	height:35px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#courseName::placeholder{\r\n");
      out.write("	color:#a9a9a9;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");


	TempSaveDao tempSaveDao = new TempSaveDao();

	List<TempSaveDto> list = tempSaveDao.selectTemp();
	String[] name=new String[list.size()];
	String[] tour_seq = new String[list.size()];
	String[] intro = new String[list.size()];
	int[] num = new int[list.size()];
	String mainPhoto = null;
	
	String myid = (String)session.getAttribute("myid");
	MemberDao memberDao = new MemberDao();
	MemberDto memberDto = memberDao.getData(myid);

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("$(function(){\r\n");
      out.write("	var s=\"\";\r\n");
      out.write("    $(\"#selDay\").change(function(){\r\n");
      out.write("        if ($(this).val() == \"당일치기\") {\r\n");
      out.write("            //alert(\"당일치기가 선택되었습니다.\");\r\n");
      out.write("            s=\"\";\r\n");
      out.write("            s+='<select class=\"form-select form-select-sm selDayClass\" style=\"width:85px;\">';\r\n");
      out.write("			s+= '<option value=\"1\" selected>1일차</option>';\r\n");
      out.write("			s+= '</select>';\r\n");
      out.write("			\r\n");
      out.write("			$(\"td.day\").html(s);\r\n");
      out.write("		}\r\n");
      out.write("        else if($(this).val() == \"1박2일\"){\r\n");
      out.write("        	s=\"\";\r\n");
      out.write("        	s+='<select class=\"form-select form-select-sm selDayClass\" style=\"width:85px;\">';\r\n");
      out.write("			s+= '<option value=\"1\" selected>1일차</option>';\r\n");
      out.write("			s+= '<option value=\"2\">2일차</option>';\r\n");
      out.write("			s+= '</select>';\r\n");
      out.write("			\r\n");
      out.write("			$(\"td.day\").html(s);\r\n");
      out.write("        }\r\n");
      out.write("        else if($(this).val() == \"2박3일\"){\r\n");
      out.write("        	s=\"\";\r\n");
      out.write("        	s+='<select class=\"form-select form-select-sm selDayClass\" style=\"width:85px;\">';\r\n");
      out.write("			s+= '<option value=\"1\" selected>1일차</option>';\r\n");
      out.write("			s+= '<option value=\"2\">2일차</option>';\r\n");
      out.write("			s+= '<option value=\"3\">3일차</option>';\r\n");
      out.write("			s+= '</select>';\r\n");
      out.write("			\r\n");
      out.write("			$(\"td.day\").html(s);\r\n");
      out.write("        }\r\n");
      out.write("        else if($(this).val() == \"3박4일\"){\r\n");
      out.write("        	s=\"\";\r\n");
      out.write("        	s+='<select class=\"form-select form-select-sm selDayClass\" style=\"width:85px;\">';\r\n");
      out.write("			s+= '<option value=\"1\" selected>1일차</option>';\r\n");
      out.write("			s+= '<option value=\"2\">2일차</option>';\r\n");
      out.write("			s+= '<option value=\"3\">3일차</option>';\r\n");
      out.write("			s+= '<option value=\"4\">4일차</option>';\r\n");
      out.write("			s+= '</select>';\r\n");
      out.write("			\r\n");
      out.write("			$(\"td.day\").html(s);\r\n");
      out.write("        }\r\n");
      out.write("        });\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 선택한 관광지 목록이 나타나는 테이블 -->\r\n");
      out.write("<table id=\"selectedPlacesTable\" class=\"table table-bordered\" style=\"width:350px; text-align:center\" >\r\n");
      out.write("	<caption align=\"top\"><b id=\"addCaption\">추가한 장소</b>\r\n");
      out.write("	<select id=\"selDay\" class=\"form-select form-select-sm\">\r\n");
      out.write("    <option value=\"당일치기\" selected>당일치기</option>\r\n");
      out.write("    <option value=\"1박2일\">1박2일</option>\r\n");
      out.write("    <option value=\"2박3일\">2박3일</option>\r\n");
      out.write("    <option value=\"3박4일\">3박4일</option>\r\n");
      out.write("</select></caption>\r\n");
      out.write("	<thead><tr><th colspan=\"3\">코스의 이름을 입력하세요&nbsp;&nbsp;&nbsp;<button type=\"button\" id=\"btnCname\" class=\"btn btn-danger btn-sm\">중복체크</button><br><span class=\"cnameSuccess\"></span><input type=\"text\" class=\"form-control\" id=\"courseName\" name=\"courseName\" placeholder=\"ex)하하호호 웃음이 나는 코스\"></th></tr></thead>\r\n");
      out.write("		<tbody>");
for (int i=0; i<list.size();i++){ TempSaveDto tempSaveDto = list.get(i);
      out.write("</tbody>\r\n");
      out.write("		<tr>\r\n");
      out.write("		<td width=\"70\" class=\"day\"><select class=\"form-select form-select-sm selDayClass\" style=\"width:85px;\">\r\n");
      out.write("			<option value=\"1\" selected>1일차</option>\r\n");
      out.write("			</select></td>\r\n");
      out.write("		<td width=\"40\">");
      out.print(i+1);
      out.write("</td>\r\n");
      out.write("		<td id=\"selName\">");
      out.print(tempSaveDto.getName() );
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("\r\n");
      out.write("		");

		tour_seq[i] = tempSaveDto.getTour_seq();
		name[i] = tempSaveDto.getName();
		intro[i] = tempSaveDto.getIntro();
		num[i] = (i+1);
		mainPhoto = tempSaveDto.getPhoto(); 
		} 
      out.write("\r\n");
      out.write("	<caption align=\"bottom\"><button type=\"button\" id=\"btncourseadd\" class=\"btn btn-success\">나만의 코스 만들기</button></caption>\r\n");
      out.write("	</table>\r\n");
      out.write("	<input type=\"hidden\" id=\"memId\" value=\"");
      out.print(memberDto.getId());
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("//코스이름 중복 체크\r\n");
      out.write("$(document).on(\"click\", \"#btnCname\", function() {\r\n");
      out.write("    var courseName = $(\"#courseName\").val();\r\n");
      out.write("    var memId = $(\"#memId\").val(); \r\n");
      out.write("\r\n");
      out.write("    $.ajax({\r\n");
      out.write("        type: \"get\",\r\n");
      out.write("        url: \"myCourse/cnameSearch.jsp\",\r\n");
      out.write("        dataType: \"json\",\r\n");
      out.write("        data: { \"courseName\": courseName, \"memId\":memId },\r\n");
      out.write("        success: function(data) {\r\n");
      out.write("\r\n");
      out.write("           if (data.count >= 1) {\r\n");
      out.write("                $(\"span.cnameSuccess\").text(\"이미 존재하는 코스이름입니다\");\r\n");
      out.write("                $(\"#courseName\").val(\"\");\r\n");
      out.write("            } else {\r\n");
      out.write("                $(\"span.cnameSuccess\").text(\"사용 가능한 코스이름입니다\");\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("});\r\n");
      out.write("		\r\n");
      out.write(" //나만의 코스 만들기 버튼 클릭시 코스 이름 중복 여부 확인하고 추가\r\n");
      out.write(" $(\"#btncourseadd\").click(function(){\r\n");
      out.write("\r\n");
      out.write("	 var courseName = $(\"#courseName\").val();\r\n");
      out.write("	 var cnameText = $(\"span.cnameSuccess\").text();\r\n");
      out.write("	 var memId = $(\"#memId\").val();\r\n");
      out.write("	 var selNum = ");
      out.print( new Gson().toJson(num) );
      out.write(";\r\n");
      out.write("	 var intro = ");
      out.print( new Gson().toJson(intro) );
      out.write(";\r\n");
      out.write("	 var tour_seq = ");
      out.print( new Gson().toJson(tour_seq) );
      out.write(";\r\n");
      out.write("	 var spotName = ");
      out.print( new Gson().toJson(name) );
      out.write(";\r\n");
      out.write("	 var mainPhoto = \"");
      out.print( mainPhoto);
      out.write("\";\r\n");
      out.write("	 var day = []; // 일차 저장할 배열\r\n");
      out.write("	 var length = spotName.length;\r\n");
      out.write("	 \r\n");
      out.write("	 \r\n");
      out.write("	// select 요소의 값을 배열에 추가\r\n");
      out.write("     $(\".selDayClass\").each(function () {\r\n");
      out.write("         var value = $(this).val();\r\n");
      out.write("         day.push(value);\r\n");
      out.write("     });\r\n");
      out.write("\r\n");
      out.write("   \r\n");
      out.write("	 \r\n");
      out.write("	 //배열로 받기\r\n");
      out.write("	 \r\n");
      out.write("\r\n");
      out.write("	    if(courseName==\"\"){\r\n");
      out.write("	    	alert(\"코스 이름을 입력해주세요!\");\r\n");
      out.write("	    }else if(cnameText!=\"사용 가능한 코스이름입니다\"){\r\n");
      out.write("	    	alert(\"중복 체크를 완료해주세요!\");\r\n");
      out.write("	    }\r\n");
      out.write("\r\n");
      out.write("	    else if(courseName!=\"\"&&cnameText==\"사용 가능한 코스이름입니다\"){\r\n");
      out.write("	    	var courseName = $(\"#courseName\").val();\r\n");
      out.write("	    	for(var i=0; i<length;i++){\r\n");
      out.write("\r\n");
      out.write("           // 서버로 선택한 장소 데이터를 전송\r\n");
      out.write("           $.ajax({\r\n");
      out.write("               type: \"POST\",\r\n");
      out.write("               url: \"myCourse/insertCourse.jsp\", // 서버로 데이터를 전송할 주소 설정\r\n");
      out.write("               data: {courseName: courseName, memId:memId, spotName: spotName[i], selNum: selNum[i], intro: intro[i], tour_seq: tour_seq[i], mainPhoto:mainPhoto, day:day[i]  }, // 선택한 장소 데이터를 전송\r\n");
      out.write("               success: function(response) {\r\n");
      out.write("               	//alert(\"장소가 성공적으로 추가되었습니다.\");\r\n");
      out.write("					\r\n");
      out.write("                   /* var tableBody = document.querySelector('#selectedPlacesTable tbody');\r\n");
      out.write("                   tableBody.innerHTML = ''; // 기존 테이블 내용 초기화 */\r\n");
      out.write("                   \r\n");
      out.write("                // 코스 저장 후 courseName 입력란을 비움\r\n");
      out.write("                   $(\"#courseName\").val(\"\"); // 입력란을 비워줍니다.\r\n");
      out.write("                  \r\n");
      out.write("                  location.reload();\r\n");
      out.write("               },\r\n");
      out.write("               error: function(error) {\r\n");
      out.write("                   alert(\"장소 추가 중 오류가 발생했습니다.\");\r\n");
      out.write("               }\r\n");
      out.write("           });\r\n");
      out.write("           \r\n");
      out.write("           \r\n");
      out.write("           //통계를 위한 데이터 전송\r\n");
      out.write("           $.ajax({\r\n");
      out.write("        	   type:\"post\",\r\n");
      out.write("        	   url: \"myCourse/statistics.jsp\",\r\n");
      out.write("        	   data: {memId:memId, tour_seq: tour_seq[i]},\r\n");
      out.write("        	   success: function(response){\r\n");
      out.write("        		   //alert(\"통계 데이터 전송 성공!!\");\r\n");
      out.write("        	   }\r\n");
      out.write("           });\r\n");
      out.write("		 \r\n");
      out.write("	    	}\r\n");
      out.write("	    }\r\n");
      out.write("\r\n");
      out.write("});  \r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
